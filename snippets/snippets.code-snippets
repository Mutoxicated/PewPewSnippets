{
    /*  pewpew library snippets  */
    "print": {
      "prefix": "print()",
      "body": "pewpew.print(\"$0\")",
      "description": "Prints to the console."
    },
    "print_debug_info": {
      "prefix": ["debug()", "print_debug()"],
      "body": "pewpew.print_debug_info()",
      "description": "Prints the number of entities created and the amount of memory used by the script."
    },
    "set_level_size": {
      "prefix": "set_level_size()",
      "body": [
        "local ${1:width} = 500fx",
        "local ${2:height} = 500fx",
        "pewpew.set_level_size(${3:width}, ${4:height})"
      ],
      "description": "Sets the level's size."
    },
    "add_wall": {
      "prefix": "add_wall()",
      "body": "local ${1:wall_id} = pewpew.add_wall(${2:start_x}, ${3:start_y}, ${4:end_x}, ${5:end_y})",
      "description": "Adds a wall to the level from (start_x,start_y) to (end_x,end_y), and returns its wall ID. Note: A maximum of 200 walls can be created."
    },
    "remove_wall": {
      "prefix": "remove_wall()",
      "body": "pewpew.remove_wall(${1:wall_id})",
      "description": "Remove the wall with the given wall_id."
    },
    "add_update_callback": {
      "prefix": "add_update_callback()",
      "body": [
        "local ${1:time} = 0",
        "pewpew.add_update_callback(function()",
        "    ${2:time} = ${3:time} + 1",
        "    $0",
        "end)"
      ],
      "description": "Adds a callback that will be updated at each game tick."
    },
    "get_number_of_players": {
      "prefix": "get_number_of_players()",
      "body": "local ${1:player_count} = pewpew.get_number_of_players()",
      "description": "Returns the number of players in the game."
    },
    "increase_score_of_player": {
      "prefix": "increase_score_of_player()",
      "body": "pewpew.increase_score_of_player(${1:player_index}, ${2:delta})",
      "description": "Increases the score of the player at the specified player_index by an amount of delta."
    },
    "stop_game": {
      "prefix": "stop_game()",
      "body": "pewpew.stop_game()",
      "description": "Ends the current game."
    },
    "get_player_inputs": {
      "prefix": "get_player_inputs()",
      "body": "local ${1:move_angle}, ${2:move_distance}, ${3:shoot_angle}, ${4:shoot_distance} = pewpew.get_player_inputs(${5:player_index})",
      "description": "Returns the inputs of the player at the specified index."
    },
    "get_score_of_player": {
      "prefix": "get_score_of_player()",
      "body": "local ${1:score} = pewpew.pewpew.get_score_of_player(${2:player_index})",
      "description": "Returns the inputs of the player at the specified index."
    },
    "configure_player": {
      "prefix": "configure_player()",
      "body": "pewpew.configure_player(${1:player_index}, ${2:{}})",
      "description": "Configures the player at the specified player_index."
    },
    "get_player_configuration": {
      "prefix": "get_player_configuration()",
      "body": "local ${1:conf} = pewpew.get_player_configuration(${2:player_index})",
      "description": "Returns a map containing the configuration of the player at the specified player_index."
    },
    "configure_player_ship_weapon": {
      "prefix": "configure_player_ship_weapon()",
      "body": "pewpew.configure_player_ship_weapon(${1:ship_id}, ${2:{}})",
      "description": "Configures the weapon of the ship identified with ship_id using configuration."
    },
    "add_damage_to_player_ship": {
      "prefix": "add_damage_to_player_ship()",
      "body": "pewpew.add_damage_to_player_ship(${1:ship_id}, ${2:damage})",
      "description": "Reduces the amount of shield of the player that owns the ship by damage points."
    },
    "add_arrow_to_player_ship": {
      "prefix": "add_arrow_to_player_ship()",
      "body": "local ${1:arrow_id} = pewpew.add_arrow_to_player_ship(${2:ship_id}, ${3:target_id}, ${4:color})",
      "description": "Adds an arrow to the ship identified with ship_id pointing towards the entity identified with target_id, and returns the ID of the arrow."
    },
    "remove_arrow_from_player_ship": {
      "prefix": "remove_arrow_from_player_ship()",
      "body": "pewpew.remove_arrow_from_player_ship(${1:ship_id}, ${2:arrow_id})",
      "description": "Removes the arrow identified by arrow_id from the ship identified by ship_id."
    },
    "make_player_ship_transparent": {
      "prefix": "make_player_ship_transparent()",
      "body": "pewpew.make_player_ship_transparent(${1:ship_id}, ${2:transparency_duration})",
      "description": "Makes the player ship transparent for transparency_duration game ticks."
    },
    "get_entity_count":{
      "prefix": "get_enity_count()",
      "body": "pewpew.get_enity_count(${1:type})",
      "description": "Returns the number of entities of specified type that are alive."
    },
    "play_ambient_sound":{
      "prefix": "play_ambient_sound()",
      "body": "pewpew.play_ambient_sound(${1:sound_path}, ${2:index})",
      "description": "Plays the sound described at sound_path at the specified index."
    },
    "play_sound":{
      "prefix": "play_sound()",
      "body": "pewpew.play_sound(${1:sound_path}, ${2:index}, ${3:x}, ${4:y})",
      "description": "Plays the sound described at sound_path at the specified in-game location."
    },
    "create_explosion":{
      "prefix": "create_explosion()",
      "body": "pewpew.create_explosion(${1:x}, ${2:y}, ${3:color}, ${4:scale}, ${5:particle_count})",
      "description": "Creates an explosion of particles at the specified location. Scale within the range [0, 10] and particle_count in the range [1, 100].",
    },
    "new_asteroid":{
      "prefix": "new_asteroid()",
      "body": "pewpew.new_asteroid(${1:x}, ${2:y})",
      "description": "Creates a new Asteroid at the specified location and returns its entityId.",
    },
    "new_baf":{
      "prefix": "new_baf()",
      "body": "pewpew.new_baf(${1:x}, ${2:y}, ${3:angle}, ${4:speed}, ${5:lifetime})",
      "description": "Creates a new BAF at the specified location, and returns its entityId."
    },
    "new_bomb":{
      "prefix": "new_bomb()",
      "body": "pewpew.new_bomb(${1:x}, ${2:y}, ${3:type})",
      "description": "Creates a new Bomb at the specified location, and returns its entityId."
    },
    "new_customizable_entity":{
      "prefix": "new_customizable_entity()",
      "body": "pewpew.new_customizable_entity(${1:x}, ${2:y})",
      "description": "Creates a new customizable entity at the specified location, and returns its entityId."
    },
    "new_inertiac":{
      "prefix": "new_inertiac()",
      "body": "pewpew.new_inertiac(${1:x}, ${2:y}, ${3:acceleration}, ${1:angle})",
      "description": "Creates a new Inertiac at the specified location, and returns its entityId."
    },
    "new_mothership":{
      "prefix": "new_mothership()",
      "body": "new_mothership(${1:x}, ${2:y}, ${3:type}, ${4:angle})",
      "description": "Creates a new Mothership at the specified location, and returns its entityId."
    },
  }
  